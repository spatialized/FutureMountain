<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OPS.Serialization</name>
    </assembly>
    <members>
        <member name="T:OPS.Serialization.Attributes.ClassInheritanceAttribute">
            <summary>
            Attach this Attribute to a base class and link to a class inheriting the base class.
            As Parameter apply a type of this inherited class and an increasing index beginning by 0.
            </summary>
        </member>
        <member name="T:OPS.Serialization.Attributes.SerializeAbleFieldOptionalAttribute">
            <summary>
            Attach this Attribute to a field in a serializeable class to mark it as serializeable.
            The optional means, when an serialized object gets deserialized and this serialized object does not contain a 
            value for the field marked as optional, there is no error. For not optional errors there will be a error!
            Good for versioning.
            </summary>
        </member>
        <member name="T:OPS.Serialization.Attributes.SerializeAbleFieldAttribute">
            <summary>
            Attach this Attribute to a field in a serializeable class to mark it as serializeable.
            </summary>
        </member>
        <member name="T:OPS.Serialization.Attributes.SerializeAbleClassAttribute">
            <summary>
            Attach this Attribute to a class to mark it as serializeable.
            The class must have an empty constructor!
            </summary>
        </member>
        <member name="P:OPS.Serialization.Byte.ByteReader.Position">
            <summary>
              <para>The current position within the buffer.</para>
            </summary>
        </member>
        <member name="P:OPS.Serialization.Byte.ByteReader.Length">
            <summary>
              <para>The current length of the buffer.</para>
            </summary>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteReader.#ctor">
            <summary>
              <para>Creates a new ByteReader object.</para>
            </summary>
            <param name="buffer">A buffer to construct the reader with, this buffer is NOT copied.</param>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteReader.#ctor(System.Byte[])">
            <summary>
              <para>Creates a new ByteReader object.</para>
            </summary>
            <param name="buffer">A buffer to construct the reader with, this buffer is NOT copied.</param>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteReader.SeekZero">
            <summary>
              <para>Sets the current position of the reader's stream to the start of the stream.</para>
            </summary>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteReader.ReadPackedUInt32">
            <summary>
              <para>Reads a 32-bit variable-length-encoded value.</para>
            </summary>
            <returns>
              <para>The 32 bit value read.</para>
            </returns>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteReader.ReadPackedUInt64">
            <summary>
              <para>Reads a 64-bit variable-length-encoded value.</para>
            </summary>
            <returns>
              <para>The 64 bit value read.</para>
            </returns>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteReader.ReadByte">
            <summary>
              <para>Reads a byte from the stream.</para>
            </summary>
            <returns>
              <para>The value read.</para>
            </returns>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteReader.ReadSByte">
            <summary>
              <para>Reads a signed byte from the stream.</para>
            </summary>
            <returns>
              <para>Value read.</para>
            </returns>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteReader.ReadInt16">
            <summary>
              <para>Reads a signed 16 bit integer from the stream.</para>
            </summary>
            <returns>
              <para>Value read.</para>
            </returns>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteReader.ReadUInt16">
            <summary>
              <para>Reads an unsigned 16 bit integer from the stream.</para>
            </summary>
            <returns>
              <para>Value read.</para>
            </returns>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteReader.ReadInt32">
            <summary>
              <para>Reads a signed 32bit integer from the stream.</para>
            </summary>
            <returns>
              <para>Value read.</para>
            </returns>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteReader.ReadUInt32">
            <summary>
              <para>Reads an unsigned 32 bit integer from the stream.</para>
            </summary>
            <returns>
              <para>Value read.</para>
            </returns>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteReader.ReadInt64">
            <summary>
              <para>Reads a signed 64 bit integer from the stream.</para>
            </summary>
            <returns>
              <para>Value read.</para>
            </returns>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteReader.ReadUInt64">
            <summary>
              <para>Reads an unsigned 64 bit integer from the stream.</para>
            </summary>
            <returns>
              <para>Value read.</para>
            </returns>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteReader.ReadDecimal">
            <summary>
              <para>Reads a decimal from the stream.</para>
            </summary>
            <returns>
              <para>Value read.</para>
            </returns>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteReader.ReadSingle">
            <summary>
              <para>Reads a float from the stream.</para>
            </summary>
            <returns>
              <para>Value read.</para>
            </returns>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteReader.ReadDouble">
            <summary>
              <para>Reads a double from the stream.</para>
            </summary>
            <returns>
              <para>Value read.</para>
            </returns>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteReader.ReadString">
            <summary>
              <para>Reads a string from the stream. (max of 32k bytes).</para>
            </summary>
            <returns>
              <para>Value read.</para>
            </returns>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteReader.ReadChar">
            <summary>
              <para>Reads a char from the stream.</para>
            </summary>
            <returns>
              <para>Value read.</para>
            </returns>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteReader.ReadBoolean">
            <summary>
              <para>Reads a boolean from the stream.</para>
            </summary>
            <returns>
              <para>The value read.</para>
            </returns>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteReader.ReadBytes(System.Int32)">
            <summary>
              <para>Reads a number of bytes from the stream.</para>
            </summary>
            <param name="count">Number of bytes to read.</param>
            <returns>
              <para>Bytes read. (this is a copy).</para>
            </returns>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteReader.ReadBytesAndSize">
            <summary>
              <para>This read a 16-bit byte count and a array of bytes of that size from the stream.</para>
            </summary>
            <returns>
              <para>The bytes read from the stream.</para>
            </returns>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteReader.ReadVector2">
            <summary>
              <para>Reads a Unity Vector2 object.</para>
            </summary>
            <returns>
              <para>The vector read from the stream.</para>
            </returns>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteReader.ReadVector3">
            <summary>
              <para>Reads a Unity Vector3 objects.</para>
            </summary>
            <returns>
              <para>The vector read from the stream.</para>
            </returns>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteReader.ReadVector4">
            <summary>
              <para>Reads a Unity Vector4 object.</para>
            </summary>
            <returns>
              <para>The vector read from the stream.</para>
            </returns>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteReader.ReadColor">
            <summary>
              <para>Reads a unity Color objects.</para>
            </summary>
            <returns>
              <para>The color read from the stream.</para>
            </returns>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteReader.ReadColor32">
            <summary>
              <para>Reads a unity color32 objects.</para>
            </summary>
            <returns>
              <para>The colo read from the stream.</para>
            </returns>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteReader.ReadQuaternion">
            <summary>
              <para>Reads a Unity Quaternion object.</para>
            </summary>
            <returns>
              <para>The quaternion read from the stream.</para>
            </returns>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteReader.ReadRect">
            <summary>
              <para>Reads a Unity Rect object.</para>
            </summary>
            <returns>
              <para>The rect read from the stream.</para>
            </returns>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteReader.ReadPlane">
            <summary>
              <para>Reads a unity Plane object.</para>
            </summary>
            <returns>
              <para>The plane read from the stream.</para>
            </returns>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteReader.ReadRay">
            <summary>
              <para>Reads a Unity Ray object.</para>
            </summary>
            <returns>
              <para>The ray read from the stream.</para>
            </returns>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteReader.ReadMatrix4x4">
            <summary>
              <para>Reads a unity Matrix4x4 object.</para>
            </summary>
            <returns>
              <para>The matrix read from the stream.</para>
            </returns>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteReader.ToString">
            <summary>
              <para>Returns a string representation of the reader's buffer.</para>
            </summary>
            <returns>
              <para>Buffer contents.</para>
            </returns>
        </member>
        <member name="P:OPS.Serialization.Byte.ByteWriter.Position">
            <summary>
              <para>The current position of the internal buffer.</para>
            </summary>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteWriter.#ctor">
            <summary>
              <para>Creates a new ByteWriter object.</para>
            </summary>
            <param name="buffer">A buffer to write into. This is not copied.</param>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteWriter.#ctor(System.Byte[])">
            <summary>
              <para>Creates a new ByteWriter object.</para>
            </summary>
            <param name="buffer">A buffer to write into. This is not copied.</param>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteWriter.ToArray">
            <summary>
              <para>Returns a copy of internal array of bytes the writer is using, it copies only the bytes used.</para>
            </summary>
            <returns>
              <para>Copy of data used by the writer.</para>
            </returns>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteWriter.AsArray">
            <summary>
              <para>Returns the internal array of bytes the writer is using. This is NOT a copy.</para>
            </summary>
            <returns>
              <para>Internal buffer.</para>
            </returns>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteWriter.WritePackedUInt32(System.UInt32)">
            <summary>
              <para>This writes the 32-bit value to the stream using variable-length-encoding.</para>
            </summary>
            <param name="value">Value to write.</param>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteWriter.WritePackedUInt64(System.UInt64)">
            <summary>
              <para>This writes the 64-bit value to the stream using variable-length-encoding.</para>
            </summary>
            <param name="value">Value to write.</param>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteWriter.Write(System.Char)">
            <summary>
              <para>This writes a reference to an object, value, buffer or network message, together with a NetworkIdentity component to the stream.</para>
            </summary>
            <param name="value">The object to write.</param>
            <param name="buffer">The byte buffer to write.</param>
            <param name="count">The number of bytes in the byte buffer to write.</param>
            <param name="offset">The byte buffer array element to start writing from.</param>
            <param name="msg">The network message to write.</param>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteWriter.Write(System.Byte)">
            <summary>
              <para>This writes a reference to an object, value, buffer or network message, together with a NetworkIdentity component to the stream.</para>
            </summary>
            <param name="value">The object to write.</param>
            <param name="buffer">The byte buffer to write.</param>
            <param name="count">The number of bytes in the byte buffer to write.</param>
            <param name="offset">The byte buffer array element to start writing from.</param>
            <param name="msg">The network message to write.</param>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteWriter.Write(System.SByte)">
            <summary>
              <para>This writes a reference to an object, value, buffer or network message, together with a NetworkIdentity component to the stream.</para>
            </summary>
            <param name="value">The object to write.</param>
            <param name="buffer">The byte buffer to write.</param>
            <param name="count">The number of bytes in the byte buffer to write.</param>
            <param name="offset">The byte buffer array element to start writing from.</param>
            <param name="msg">The network message to write.</param>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteWriter.Write(System.Int16)">
            <summary>
              <para>This writes a reference to an object, value, buffer or network message, together with a NetworkIdentity component to the stream.</para>
            </summary>
            <param name="value">The object to write.</param>
            <param name="buffer">The byte buffer to write.</param>
            <param name="count">The number of bytes in the byte buffer to write.</param>
            <param name="offset">The byte buffer array element to start writing from.</param>
            <param name="msg">The network message to write.</param>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteWriter.Write(System.UInt16)">
            <summary>
              <para>This writes a reference to an object, value, buffer or network message, together with a NetworkIdentity component to the stream.</para>
            </summary>
            <param name="value">The object to write.</param>
            <param name="buffer">The byte buffer to write.</param>
            <param name="count">The number of bytes in the byte buffer to write.</param>
            <param name="offset">The byte buffer array element to start writing from.</param>
            <param name="msg">The network message to write.</param>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteWriter.Write(System.Int32)">
            <summary>
              <para>This writes a reference to an object, value, buffer or network message, together with a NetworkIdentity component to the stream.</para>
            </summary>
            <param name="value">The object to write.</param>
            <param name="buffer">The byte buffer to write.</param>
            <param name="count">The number of bytes in the byte buffer to write.</param>
            <param name="offset">The byte buffer array element to start writing from.</param>
            <param name="msg">The network message to write.</param>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteWriter.Write(System.UInt32)">
            <summary>
              <para>This writes a reference to an object, value, buffer or network message, together with a NetworkIdentity component to the stream.</para>
            </summary>
            <param name="value">The object to write.</param>
            <param name="buffer">The byte buffer to write.</param>
            <param name="count">The number of bytes in the byte buffer to write.</param>
            <param name="offset">The byte buffer array element to start writing from.</param>
            <param name="msg">The network message to write.</param>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteWriter.Write(System.Int64)">
            <summary>
              <para>This writes a reference to an object, value, buffer or network message, together with a NetworkIdentity component to the stream.</para>
            </summary>
            <param name="value">The object to write.</param>
            <param name="buffer">The byte buffer to write.</param>
            <param name="count">The number of bytes in the byte buffer to write.</param>
            <param name="offset">The byte buffer array element to start writing from.</param>
            <param name="msg">The network message to write.</param>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteWriter.Write(System.UInt64)">
            <summary>
              <para>This writes a reference to an object, value, buffer or network message, together with a NetworkIdentity component to the stream.</para>
            </summary>
            <param name="value">The object to write.</param>
            <param name="buffer">The byte buffer to write.</param>
            <param name="count">The number of bytes in the byte buffer to write.</param>
            <param name="offset">The byte buffer array element to start writing from.</param>
            <param name="msg">The network message to write.</param>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteWriter.Write(System.Single)">
            <summary>
              <para>This writes a reference to an object, value, buffer or network message, together with a NetworkIdentity component to the stream.</para>
            </summary>
            <param name="value">The object to write.</param>
            <param name="buffer">The byte buffer to write.</param>
            <param name="count">The number of bytes in the byte buffer to write.</param>
            <param name="offset">The byte buffer array element to start writing from.</param>
            <param name="msg">The network message to write.</param>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteWriter.Write(System.Double)">
            <summary>
              <para>This writes a reference to an object, value, buffer or network message, together with a NetworkIdentity component to the stream.</para>
            </summary>
            <param name="value">The object to write.</param>
            <param name="buffer">The byte buffer to write.</param>
            <param name="count">The number of bytes in the byte buffer to write.</param>
            <param name="offset">The byte buffer array element to start writing from.</param>
            <param name="msg">The network message to write.</param>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteWriter.Write(System.Decimal)">
            <summary>
              <para>This writes a reference to an object, value, buffer or network message, together with a NetworkIdentity component to the stream.</para>
            </summary>
            <param name="value">The object to write.</param>
            <param name="buffer">The byte buffer to write.</param>
            <param name="count">The number of bytes in the byte buffer to write.</param>
            <param name="offset">The byte buffer array element to start writing from.</param>
            <param name="msg">The network message to write.</param>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteWriter.Write(System.String)">
            <summary>
              <para>This writes a reference to an object, value, buffer or network message, together with a NetworkIdentity component to the stream.</para>
            </summary>
            <param name="value">The object to write.</param>
            <param name="buffer">The byte buffer to write.</param>
            <param name="count">The number of bytes in the byte buffer to write.</param>
            <param name="offset">The byte buffer array element to start writing from.</param>
            <param name="msg">The network message to write.</param>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteWriter.Write(System.Boolean)">
            <summary>
              <para>This writes a reference to an object, value, buffer or network message, together with a NetworkIdentity component to the stream.</para>
            </summary>
            <param name="value">The object to write.</param>
            <param name="buffer">The byte buffer to write.</param>
            <param name="count">The number of bytes in the byte buffer to write.</param>
            <param name="offset">The byte buffer array element to start writing from.</param>
            <param name="msg">The network message to write.</param>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteWriter.Write(System.Byte[],System.Int32)">
            <summary>
              <para>This writes a reference to an object, value, buffer or network message, together with a NetworkIdentity component to the stream.</para>
            </summary>
            <param name="value">The object to write.</param>
            <param name="buffer">The byte buffer to write.</param>
            <param name="count">The number of bytes in the byte buffer to write.</param>
            <param name="offset">The byte buffer array element to start writing from.</param>
            <param name="msg">The network message to write.</param>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteWriter.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
              <para>This writes a reference to an object, value, buffer or network message, together with a NetworkIdentity component to the stream.</para>
            </summary>
            <param name="value">The object to write.</param>
            <param name="buffer">The byte buffer to write.</param>
            <param name="count">The number of bytes in the byte buffer to write.</param>
            <param name="offset">The byte buffer array element to start writing from.</param>
            <param name="msg">The network message to write.</param>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteWriter.WriteBytesAndSize(System.Byte[],System.Int32)">
            <summary>
              <para>This writes a 16-bit count and a array of bytes of that length to the stream.</para>
            </summary>
            <param name="buffer">Array of bytes to write.</param>
            <param name="count">Number of bytes from the array to write.</param>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteWriter.WriteBytesFull(System.Byte[])">
            <summary>
              <para>This writes a 16-bit count and an array of bytes of that size to the stream.</para>
            </summary>
            <param name="buffer">Bytes to write.</param>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteWriter.Write(UnityEngine.Vector2)">
            <summary>
              <para>This writes a reference to an object, value, buffer or network message, together with a NetworkIdentity component to the stream.</para>
            </summary>
            <param name="value">The object to write.</param>
            <param name="buffer">The byte buffer to write.</param>
            <param name="count">The number of bytes in the byte buffer to write.</param>
            <param name="offset">The byte buffer array element to start writing from.</param>
            <param name="msg">The network message to write.</param>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteWriter.Write(UnityEngine.Vector3)">
            <summary>
              <para>This writes a reference to an object, value, buffer or network message, together with a NetworkIdentity component to the stream.</para>
            </summary>
            <param name="value">The object to write.</param>
            <param name="buffer">The byte buffer to write.</param>
            <param name="count">The number of bytes in the byte buffer to write.</param>
            <param name="offset">The byte buffer array element to start writing from.</param>
            <param name="msg">The network message to write.</param>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteWriter.Write(UnityEngine.Vector4)">
            <summary>
              <para>This writes a reference to an object, value, buffer or network message, together with a NetworkIdentity component to the stream.</para>
            </summary>
            <param name="value">The object to write.</param>
            <param name="buffer">The byte buffer to write.</param>
            <param name="count">The number of bytes in the byte buffer to write.</param>
            <param name="offset">The byte buffer array element to start writing from.</param>
            <param name="msg">The network message to write.</param>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteWriter.Write(UnityEngine.Color)">
            <summary>
              <para>This writes a reference to an object, value, buffer or network message, together with a NetworkIdentity component to the stream.</para>
            </summary>
            <param name="value">The object to write.</param>
            <param name="buffer">The byte buffer to write.</param>
            <param name="count">The number of bytes in the byte buffer to write.</param>
            <param name="offset">The byte buffer array element to start writing from.</param>
            <param name="msg">The network message to write.</param>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteWriter.Write(UnityEngine.Color32)">
            <summary>
              <para>This writes a reference to an object, value, buffer or network message, together with a NetworkIdentity component to the stream.</para>
            </summary>
            <param name="value">The object to write.</param>
            <param name="buffer">The byte buffer to write.</param>
            <param name="count">The number of bytes in the byte buffer to write.</param>
            <param name="offset">The byte buffer array element to start writing from.</param>
            <param name="msg">The network message to write.</param>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteWriter.Write(UnityEngine.Quaternion)">
            <summary>
              <para>This writes a reference to an object, value, buffer or network message, together with a NetworkIdentity component to the stream.</para>
            </summary>
            <param name="value">The object to write.</param>
            <param name="buffer">The byte buffer to write.</param>
            <param name="count">The number of bytes in the byte buffer to write.</param>
            <param name="offset">The byte buffer array element to start writing from.</param>
            <param name="msg">The network message to write.</param>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteWriter.Write(UnityEngine.Rect)">
            <summary>
              <para>This writes a reference to an object, value, buffer or network message, together with a NetworkIdentity component to the stream.</para>
            </summary>
            <param name="value">The object to write.</param>
            <param name="buffer">The byte buffer to write.</param>
            <param name="count">The number of bytes in the byte buffer to write.</param>
            <param name="offset">The byte buffer array element to start writing from.</param>
            <param name="msg">The network message to write.</param>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteWriter.Write(UnityEngine.Plane)">
            <summary>
              <para>This writes a reference to an object, value, buffer or network message, together with a NetworkIdentity component to the stream.</para>
            </summary>
            <param name="value">The object to write.</param>
            <param name="buffer">The byte buffer to write.</param>
            <param name="count">The number of bytes in the byte buffer to write.</param>
            <param name="offset">The byte buffer array element to start writing from.</param>
            <param name="msg">The network message to write.</param>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteWriter.Write(UnityEngine.Ray)">
            <summary>
              <para>This writes a reference to an object, value, buffer or network message, together with a NetworkIdentity component to the stream.</para>
            </summary>
            <param name="value">The object to write.</param>
            <param name="buffer">The byte buffer to write.</param>
            <param name="count">The number of bytes in the byte buffer to write.</param>
            <param name="offset">The byte buffer array element to start writing from.</param>
            <param name="msg">The network message to write.</param>
        </member>
        <member name="M:OPS.Serialization.Byte.ByteWriter.Write(UnityEngine.Matrix4x4)">
            <summary>
              <para>This writes a reference to an object, value, buffer or network message, together with a NetworkIdentity component to the stream.</para>
            </summary>
            <param name="value">The object to write.</param>
            <param name="buffer">The byte buffer to write.</param>
            <param name="count">The number of bytes in the byte buffer to write.</param>
            <param name="offset">The byte buffer array element to start writing from.</param>
            <param name="msg">The network message to write.</param>
        </member>
        <member name="T:OPS.Serialization.IO.ISerializerComponent">
            <summary>
            Use this Interface to create custom Serialization and Deserialization solutions.
            </summary>
        </member>
        <member name="M:OPS.Serialization.IO.ISerializerComponent.Serialize(System.Type,System.Object,System.Byte[]@)">
            <summary>
            Serialize an Object _Object of Type _Type to a _Byte array.
            Return true if this serializer can serialize Type _Type.
            Else false so the next serializer can check if it can serialize the Object.
            </summary>
            <param name="_Type"></param>
            <param name="_Object"></param>
            <param name="_Bytes"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Serialization.IO.ISerializerComponent.DeSerialize(System.Type,System.Byte[],System.Object@)">
            <summary>
            Deserialize a Type _Type with the bytes _Bytes to an Object _Object.
            Return true if this deserializer can deserialize Type _Type.
            Else false so the next deserializer can check if it can deserialize the Type.
            </summary>
            <param name="_Type"></param>
            <param name="_Bytes"></param>
            <param name="_Object"></param>
            <returns></returns>
        </member>
        <member name="T:OPS.Serialization.IO.Serializer">
            <summary>
            Core Component. Use it to Serialize or Deserialize Objects.
            You can even attach here custom Serialization and Deserialization solutions basing on ISerializerComponent.
            </summary>
        </member>
        <member name="M:OPS.Serialization.IO.Serializer.RegisterSerializerComponent(OPS.Serialization.IO.ISerializerComponent)">
            <summary>
            Register custom Serialization and Deserialization solutions basing on ISerializerComponent.
            </summary>
            <param name="_SerializerComponent"></param>
        </member>
        <member name="M:OPS.Serialization.IO.Serializer.Serialize(System.Object,System.Boolean,System.Boolean,System.String)">
            <summary>
            Serialize an _Object to an byte array.
            Optional you can compress and encrypt the serialized _Object.
            </summary>
            <param name="_Object"></param>
            <param name="_Compress"></param>
            <param name="_Encrypt"></param>
            <param name="_EncryptionKey"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Serialization.IO.Serializer.SerializeToStream(System.IO.Stream,System.Object,System.Boolean,System.Boolean,System.String)">
            <summary>
            Serialize an _Object to a stream.
            Optional you can compress and encrypt the serialized _Object.
            </summary>
            <param name="_WriteToStream"></param>
            <param name="_Object"></param>
            <param name="_Compress"></param>
            <param name="_Encrypt"></param>
            <param name="_EncryptionKey"></param>
        </member>
        <member name="M:OPS.Serialization.IO.Serializer.Serialize(System.Type,System.Object)">
            <summary>
            _Type will not be null if called through ClassSerializer, there is _Type the FieldType.
            Checks not for _Object is null!
            So every ISerializer has to return something if Object is null!
            </summary>
            <param name="_Type"></param>
            <param name="_Object"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Serialization.IO.Serializer.DeSerialize``1(System.Byte[],System.Boolean,System.Boolean,System.String)">
            <summary>
            Deserialize an serialized Object of Type T from a byte array.
            Optional if the serialized Object got compressed or encrypted apply the belonging parameter.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="_Bytes"></param>
            <param name="_DeCompress"></param>
            <param name="_Decrypt"></param>
            <param name="_DecryptionKey"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Serialization.IO.Serializer.DeSerializeFromStream``1(System.IO.Stream,System.Boolean,System.Boolean,System.String)">
            <summary>
            Deserialize an serialized Object of Type T from a stream.
            Optional if the serialized Object got compressed or encrypted apply the belonging parameter.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="_ReadFromStream"></param>
            <param name="_DeCompress"></param>
            <param name="_Decrypt"></param>
            <param name="_DecryptionKey"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Serialization.IO.Serializer.DeSerialize(System.Type,System.Byte[],System.Boolean,System.Boolean,System.String)">
            <summary>
            Deserialize an serialized Object of Type _Type from a byte array.
            Optional if the serialized Object got compressed or encrypted apply the belonging parameter.
            </summary>
            <param name="_Type"></param>
            <param name="_Bytes"></param>
            <param name="_DeCompress"></param>
            <param name="_Decrypt"></param>
            <param name="_DecryptionKey"></param>
            <returns></returns>
        </member>
    </members>
</doc>
